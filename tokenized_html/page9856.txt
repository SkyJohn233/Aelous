openstack docs availability zones an availability zone groups network nodes that run services like dhcp l3 fw and others it is defined as an agent s attribute on the network node thisallows users to associate an availability zone with their resources so that theresources get high availability an availability zone is used to make network resources highly available theoperators group the nodes that are attached to different power sources underseparate availability zones and configure scheduling for resources with highavailability so that they are scheduled on different availability zones the core plug-in must support the availability_zone extension the coreplug-in also must support the network_availability_zone extension toschedule a network according to availability zones the ml2plugin supportsit the router service plug-in must support the router_availability_zone extension to schedule a router according to the availability zones the l3routerplugin supports it the availability_zone attribute can be defined in dhcp-agent and l3-agent to define an availability zone for each agent set thevalue into agent section of /etc/neutron/dhcp_agent.ini or /etc/neutron/l3_agent.ini to confirm the agent s availability zone the following attributes are added into network and router use availability_zone_hints to specify the zone in which the resource ishosted availability zone is selected from default_availability_zones in /etc/neutron/neutron.conf if a resource is created without availability_zone_hints to confirm the availability zone defined by the system look at the availability_zones attribute of each resource to confirm inwhich zone the resource is hosted note the availability_zones attribute does not have a value until theresource is scheduled once the networking service schedules the resourceto zones according to availability_zone_hints availability_zones shows in which zone the resource is hosted practically the availability_zones may not match availability_zone_hints forexample even if you specify a zone with availability_zone_hints allagents of the zone may be dead before the resource is scheduled ingeneral they should match unless there are failures or there is nocapacity left in the zone requested set azawareweightscheduler to network_scheduler_driver in /etc/neutron/neutron.conf so that the networking service schedules anetwork according to the availability zone the networking service schedules a network to one of the agents within theselected zone as with weightscheduler in this case scheduler refers to dhcp_load_type as well set azleastroutersscheduler to router_scheduler_driver in file /etc/neutron/neutron.conf so that the networking service schedules a routeraccording to the availability zone the networking service schedules a router to one of the agents within theselected zone as with leastrouterscheduler although the networking service provides high availability for routers andhigh availability and fault tolerance for networks dhcp services availabilityzones provide an extra layer of protection by segmenting a networking servicedeployment in isolated failure domains by deploying ha nodes across differentavailability zones it is guaranteed that network services remain available inface of zone-wide failures that affect the deployment this section explains how to get high availability with the availability zonefor l3 and dhcp you should naturally set above configuration options for theavailability zone set the following configuration options in file /etc/neutron/neutron.conf so that you get l3 high availability ha routers are created on availability zones you selected when creating therouter set the following configuration options in file /etc/neutron/neutron.conf so that you get dhcp high availability dhcp services are created on availability zones you selected when creating thenetwork except where otherwise noted this document is licensed under creative commons attribution 3.0 license see all openstack legal documents the openstack project is provided under the apache 2.0 license openstack.org is powered by rackspace cloud computing