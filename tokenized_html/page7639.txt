lire use case what anime is this semanticmetadata.net i do not often hear of application built with lire however if i do i really appreciate it the use case of what anime is this is exceptional in many ways first of all lire was very well applied and can really solve a problem there and second soruly ho tuned it to search through over 360 million images on a single server with incredibly reasonable response time the web page built by soruly ho provides a search interface to re- find frames in anime videos not being into anime myself i still know it s a hand drawn or computer animation and it s hugely popular among fans and there are a lot of them soruly ho was so nice to compile background information on his project thanks to the lire solr integration project i was able to develop the first prototype just 12 hours after i met lire without touching a line of the source code after setting up the web server and solr i just have to write a few scripts to put all the pieces together to analyze the video i use ffmpeg to extract each frame as a jpg file with the timecode as the file name then the parallelsolrindexer analyze all these images and generate an xml file before loading this xml into solr i use a python script to put the video path and timecode to the title field finally i write a few lines of javascript to use solr rest api to submit the image url to the lirerequesthandler after some magic it would return a list of matching images sorted by similarity with the original video path and timecode in the title field the idea is pretty simple every developer can build this but scaling is challenging there are over 15,000 hours of video indexed in my search engine assume they are all 24 fps there would be 1.3 billion frames in total this is too big to fit in my server which is just a high-end pc video always play forward in time so i use a running window to remove duplicate frames unlike real life video most anime are actually drawn in 12 fps or less this method significantly reduces number of frames by 70 out of many feature classes supported by lire i only use the color layout descriptor and drop others to save space memory and computation time for analysis now each analyzed frame in my solr index only occupies 197 bytes still solely relying on one image descriptor already achieves very high accuracy even after such optimization the remaining 366 million frames are still too much that the query would often timeout so i studied and modified a little bit of the lirerequesthandler it is great that lire is free and open source instead of using the performance-killing booleanclause.occur.should i search the hashes with booleanclause.occur.must one by one until a good match is found i am only interested to images with similarity 90 i.e there is at least one common hash if i select 10 out of 100 hash values at random the search would complete in at most 10 iterations otherwise i assume there is no match but random is not good because results are inconsistent thus can not be cached so i ran an analysis on the hash distribution and always start searching from the least populated hash so similarity calculation is performed on a smaller set of images the color layout descriptor does not produce an evenly distributed hash on anime least populated hash matches only a few frames while most populated hash matches over 277 million frames the last performance issue is keeping a 67.5gb index with just 32gb ram which i think can be solved with just more ram the actual source i have modified and my hash distribution table can be found on github you can try what anime is this yourself at https //whatanime.ga/ thanks to soruly ho for sharing his thoughts and building this great search engine