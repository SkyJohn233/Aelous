how to pass command line arguments with spaces through a variable in bash stack overflow by using our site you acknowledge that you have read and understand our cookie policy privacy policy and our terms of service what i 'm trying to achieve is to read command line arguments from a file and invoke a command using them so essentially i need to pass the arguments through a bash variable the problem is that some arguments have spaces in them how can i do that not working code to illustrate the problem file.txt contents quotes are there just to show two different arguments shell script /some/command should receive two arguments aaa bbb and xxx yyy i do have control of generated file.txt and the shell script itself if you want to execute your command once for each line found in file.txt so each line is a separate argument set you can do this the xargs utility takes each line it receives on standard input and uses its content as arguments to be provided to the command that is called if the file contains only one line it will work and execute the command only once the following solution does the same but works with functions too please note that this uses eval which means that if file.txt contains malicious content arbitrary code execution could result you must be 100 certain that the data contained in the file is safe the idea with this technique is that you explode each line into an array one array element is one argument and then use an array expansion args that expands to a list of all its elements properly quoted the quotes around the expansion are important here as an aside the eval line could be replaced with but line still gets expanded so this is no safer than eval use command substitution to expand the file contents to the command as an example using printf on it incorrectly with cat will produce with proper quoting present arguments are sent as such without getting split click here to upload your image max 2 mib cancel and add another image you can also provide a link from the web log in by clicking post your answer you agree to our terms of service privacy policy and cookie policy 2019 stack exchange inc