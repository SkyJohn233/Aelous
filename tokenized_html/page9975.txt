ithaca-fv reductionproblem class reference a general class for the implementation of a full order parametrized problem more include reductionproblem.h a general class for the implementation of a full order parametrized problem definition at line 72 of file reductionproblem.h construct null definition at line 41 of file reductionproblem.c definition at line 81 of file reductionproblem.h assign boundary condition to a volvectorfield definition at line 160 of file reductionproblem.c assign boundary condition to a volscalarfield definition at line 105 of file reductionproblem.c assign internal field condition definition at line 34 of file reductionproblemtemplates.c homogenize the snapshot matrix it works with ptrlist of volvectorfield and volscalarfield definition at line 43 of file reductionproblemtemplates.c virtual function to compute the lifting function definition at line 75 of file reductionproblemtemplates.c generate equidistributed numbers definition at line 86 of file reductionproblem.c generate random numbers definition at line 56 of file reductionproblem.c generate random numbers given the dimension of the training set definition at line 68 of file reductionproblem.c constructs the parameters-coefficients manifold for vector fields based on rbf-spline model definition at line 270 of file reductionproblem.c constructs the parameters-coefficients manifold for scalar fields based on rbf-spline model definition at line 354 of file reductionproblem.c constructs the parameters-coefficients manifold for vector fields based on the b-spline model definition at line 438 of file reductionproblem.c constructs the parameters-coefficients manifold for scalar fields based on the b-spline model definition at line 492 of file reductionproblem.c virtual function to compute the lifting function for scalar field definition at line 256 of file reductionproblem.c definition at line 263 of file reductionproblem.c general projection operation definition at line 235 of file reductionproblem.c exact reconstruction using a certain number of modes for vector list of fields and the projection coefficients volvectorfield definition at line 193 of file reductionproblem.c exact reconstruction using a certain number of modes for vector list of fields and the projection coefficients volscalarfield exact reconstruction using a certain number of modes for scalar list of fields definition at line 215 of file reductionproblem.c set parameters problems definition at line 49 of file reductionproblem.c perform a truthsolve definition at line 97 of file reductionproblem.c write out a list of scalar corresponding to the parameters used in the truthsolve definition at line 242 of file reductionproblem.c arglist definition at line 103 of file reductionproblem.h matrix that contains informations about the inlet boundaries the dimension is rows number of parametrized boundary conditions cols 2 example example.inletindex.resize 1 2 example.inletindex 0 0 0 example.inletindex 0 1 0 means that there is one parametrized boundary conditions the first col contains the index of the parametrized boundary the second col contains the direction along which the bc is parametrized 0 for x 1 for y 2 for z the matrix should be implemented in the following way \mbox inletindex =\begin bmatrix \mbox bc1_index \mbox direction of bc1 \\ \mbox bc2_index \mbox direction of bc3 \\ \vdots \vdots \\ \mbox bcn_index \mbox direction of bcn \end bmatrix definition at line 132 of file reductionproblem.h definition at line 160 of file reductionproblem.h dictionary to store input output infos definition at line 101 of file reductionproblem.h row matrix of parameters definition at line 89 of file reductionproblem.h current value of the parameter definition at line 95 of file reductionproblem.h range of the parameter spaces definition at line 91 of file reductionproblem.h matrix of parameters to be used for podi where each row corresponds to a sample point in this matrix the time dimension is regarded as a parameter for unsteady problems definition at line 93 of file reductionproblem.h boolean variable it is 1 if the offline phase has already been computed else 0 definition at line 99 of file reductionproblem.h parallel handling definition at line 105 of file reductionproblem.h number of parameters definition at line 81 of file reductionproblem.h boolean variable it is 1 if the pod has already been computed else 0 definition at line 97 of file reductionproblem.h dimension of the training set used only when gerating parameters without input definition at line 87 of file reductionproblem.h