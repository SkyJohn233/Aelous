anonymous union with an anonymous struct Hello, this is my compiler's information: ICPC Intel(R) 64, Version 14.0.2.144 Build 20140120 the source code example is not intricacy: this code can be compiled by visual studio 2008' s compiler. but, icpc reports: invalid member for anonymous member class -- class "vect3" has a disallowed member function  vect3 a; I know the error comes from the anonymous struct in an anonymous union. But i just want to use it in that way. How can I do ? Hi Wang P, I cannot reproduce the issue with both 14.0 and 15.0 compiler, with ia32 and intel64. Also, I have one concern, could you please double confirm the version of your compiler? is it an official release version? I cannot find any release version with a build date of 20140120 for 14.0 Update 2 release. You may also provide your product name??? Below is an article about the version mapping... looks like the Linux version has "14.0.2.144 / 20140120" , please help to double confirm...I will also try to test the code on Linux. https://software.intel.com/en-us/articles/intel-compiler-and-composer-up... Thanks, Shenghong Hi Wang P, I have verified the test case on Linux. And yes I can reproduce the issue you reported. However, even G++ has the same error,  without C++11 . Adding C++ 11, g++ still have some errors (less), but ICPC can pass the test case. Looks like there are some issue for G++ even in c++11 mode. could you please check whether you are testing on Linux? If yes, you may need to enable c++11. Let me know whether it works. Thanks, Shenghong   Hi shenghong:    Thanks for your reply. It does work.    I'm so sorry about my carelessness. I should write down my compiler's instruction: #icpc test.cpp -o test   I have forgotten to enable C++11. The  anonymous struct is  a part   standard of C++11.       引文： Hi Wang P, I have verified the test case on Linux. And yes I can reproduce the issue you reported. However, even G++ has the same error,  without C++11 . Adding C++ 11, g++ still have some errors (less), but ICPC can pass the test case. Looks like there are some issue for G++ even in c++11 mode. could you please check whether you are testing on Linux? If yes, you may need to enable c++11. Let me know whether it works. Thanks, Shenghong   