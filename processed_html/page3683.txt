Convert geodetic latitude, longitude, altitude (LLA) coordinates to Earth-centered inertial (ECI) coordinates - MATLAB lla2eci Documentation Convert geodetic latitude, longitude, altitude (LLA) coordinatesto Earth-centered inertial (ECI) coordinates example position = lla2eci( lla , utc )  convertsgeodetic latitude, longitude, altitude (LLA) coordinates to Earth-centeredinertial (ECI) position coordinates as an  M -by-3array. The conversion is based on the Universal Coordinated Time (UTC)you specify. example position = lla2eci( lla , utc , reduction )  convertsgeodetic latitude, longitude, altitude (LLA) coordinates to Earth-centeredinertial (ECI) position coordinates as an  M -by-3array. The conversion is based on the specified reduction method andthe Universal Coordinated Time (UTC) you specify. position = lla2eci( lla , utc , reduction , deltaAT )  usesthe difference between International Atomic Time and UTC that youspecify as  deltaAT  to calculate the ECI coordinates. position = lla2eci( lla , utc , reduction , deltaAT , deltaUT1 )  usesthe difference between UTC and Universal Time (UT1), which you specifyas  deltaUT1 , in the calculation. position = lla2eci( lla , utc , reduction , deltaAT , deltaUT1 , polarmotion )  usesthe polar displacement,  polarmotion , in the calculation. position = lla2eci( lla , utc , reduction , deltaAT , deltaUT1 , polarmotion , Name,Value )  usesadditional options specified by one or more Name,Value pair arguments. collapse all Convert the position to ECI coordinates fromLLA coordinates 6 degrees north, 75 degrees west, and 1000 metersaltitude at 01/17/2010 10:20:36 UTC.   Convert the position to ECI coordinates fromLLA coordinates 55 deg south, 75 deg west, and 500 meters altitudeat 01/12/2000 4:52:12.4 UTC. Specify all arguments, including optionalones such as polar motion. collapse all  Latitude, longitude, altitude (LLA) coordinates as  M -by-3array of geodetic coordinates, in degrees, degrees, and meters, respectively.Latitude and longitude values can be any value. However, latitudevalues of +90 and -90 may return unexpected values because of singularityat the poles. Universal Coordinated Time (UTC), in the order year, month,day, hour, minutes, and seconds, for which the function calculatesthe conversion, specified as one of the following. For the year value, enter a double value that is awhole number greater than 1, such as  2013 . For the month value, enter a double value that isa whole number greater than 0, within the range  1  to  12 . For the hour value, enter a double value that is awhole number greater than 0, within the range  1  to  24 . For the hour value, enter a double value that is awhole number greater than 0, within the range  1  to  60 . For the minute and second values, enter a double valuethat is a whole number greater than 0, within the range  1  to  60 . Specify these values in one of the following formats: 1-by-6 array Specify a 1-row-by-6-column array of UTC values. M -by-6 matrix Specify an  M -by-6 array of UTC values, where  M  isthe number of transformation matrices to calculate. Each row correspondsto one set of UTC values. This is a one row-by-6 column array of UTC values. Example:  [2000 1 12 4 52 12.4] This is an  M -by-6 array of UTC values, where  M  is2. Example:  [2000 1 12 4 52 12.4;2010 6 5 7 22 0] Data Types:  double Reduction method to calculate the coordinate conversion, specifiedas one of the following: 'IAU-76/FK5' Reduce the calculation using the International AstronomicalUnion (IAU)-76/Fifth Fundamental Catalogue (FK5) (IAU-76/FK5) referencesystem. Choose this reduction method if the reference coordinate systemfor the conversion is FK5. You can use the  'dNutation'  Name,Valuepair with this reduction. This method uses the IAU 1976 precession model and the IAU 1980theory of nutation to reduce the calculation. This model and theoryare no longer current, but the software provides this reduction methodfor existing implementations. Because of the polar motion approximationthat this reduction method uses,  lla2eci  performsa coordinate conversion that is not orthogonal because of the polarmotion approximation. 'IAU-2000/2006' Reduce the calculation using the International AstronomicalUnion (IAU)-2000/2005 reference system. Choose this reduction methodif the reference coordinate system for the conversion is IAU-2000.This reduction method uses the P03 precession model to reduce thecalculation. You can use the  'dCIP'  Name,Valuepair with this reduction. Difference between International Atomic Time (IAT) and UTC,in seconds, for which the function calculates the coordinate conversion.  scalar Specify one difference-time value to calculate one directioncosine or transformation matrix. one-dimensional array Specify a one-dimensional array with  M  elements,where  M  is the number of ECI coordinates. Eachrow corresponds to one set of ECI coordinates. Specify  32  seconds as the difference betweenIAT and UTC. Example:  32 Data Types:  double Difference between UTC and Universal Time (UT1), in seconds,for which the function calculates the coordinate conversion. scalar Specify one difference-time value to calculate ECI coordinates. one-dimensional array Specify a one-dimensional array with  M  elementsof difference time values, where  M  is the numberof ECI coordinates. Each row corresponds to one set of ECI coordinates. Specify  0.234  seconds as the difference betweenUTC and UT1. Example:  0.234 Data Types:  double Polar displacement of the Earth, in radians, from the motionof the Earth crust, along the  x - and  y -axes. 1-by-2 array Specify a 1-by-2 array of the polar displacement values to convertone ECI coordinate. M -by-2 array Specify an  M -by-2 array of polar displacementvalues, where  M  is the number of ECI coordinatesto convert. Each row corresponds to one set of UTC values. Example:  [-0.0682e-5 0.1616e-5] Data Types:  double Specify optional      comma-separated pairs of  Name,Value  arguments.  Name  is      the argument name and  Value  is the corresponding value.         Name  must appear inside quotes. You can specify several name and value      pair arguments in any order as         Name1,Value1,...,NameN,ValueN . Adjustment to the longitude ( dDeltaPsi ) andobliquity ( dDeltaEpsilon ), specified in radians,as the comma-separated pair consisting of  dNutation  andan  M -by-2 array. You can use this Name,Value pairwith the IAU-76/FK5 reduction. For historical values, see the International Earth Rotation and Reference Systems Service                     website ( https://www.iers.org ) and navigate to the Earth                     Orientation Data Data/Products page. M -by-2 array Specify  M -by-2 array of adjustment values,where  M  is the number of LLA coordinates to beconverted. Each row corresponds to one set of longitude and obliquityvalues. Data Types:  double Adjustment to the location of the Celestial Intermediate Pole(CIP), in radians, specified as the comma-separated pair consistingof  dCIP  and an  M -by-2 array.This location ( dDeltaX ,  dDeltaY )is along the  x - and  y - axes.You can use this argument with the IAU-200/2006 reduction. By default,this function assumes an  M -by-2 array of zeroes. For historical values, see the International Earth Rotation and Reference Systems Service                     website ( https://www.iers.org ) and navigate to the Earth                     Orientation Data Data/Products page. M -by-2 array Specify  M -by-2 array of location adjustmentvalues, where  M  is the number of LLA coordinatesto be converted. Each row corresponds to one set of  dDeltaX  and  dDeltaY  values. Example:  'dcip',[-0.2530e-6 -0.0188e-6] Data Types:  double Custom ellipsoid planet defined by flattening. Example:  1/290 Data Types:  double Custom planet ellipsoid radius, in meters. Example:  60000 Data Types:  double dcmeci2ecef  |  ecef2lla  |  eci2lla  |  geoc2geod  |  geod2geoc  |  lla2ecef You clicked a link that corresponds to this MATLAB command:  Run the command by entering it in the MATLAB Command Window.        Web browsers do not support MATLAB commands. Choose a web site to get translated content where available and see local events and offers. Based on your location, we recommend that you select:  United States . You can also select a web site from the following list: Select the China site (in Chinese or English) for best site performance. Other MathWorks country sites are not optimized for visits from your location. Contact your local office Get trial now Explore Products Try or Buy Learn to Use Get Support About  MathWorks MathWorks Accelerating the pace of engineering and science MathWorks  is the leading developer of mathematical computing software for engineers and scientists. Discover...  1994-2019 The MathWorks, Inc. Join the conversation 