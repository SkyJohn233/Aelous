Janardan Yri About Janardan, blah blah etc. About Janardan, blah blah etc. Your Custom Text Here My work includes: - UX- and analytics-driven  iOS  apps - Innovative  websites  and  APIs  in Rails, Node.js, and PHP - Well-architected  SQL databases  scaling to millions of rows -  Desktop  and low-level  services -  Mentoring  people and assembling  teams  to accomplish the same :) When I arrived, Omni’s app was stuck in a year-long total rewrite. I  led the completion of the rewrite , helped  ship nine updates , and  designed new features  along the way. When Hired decided to build a mobile team, they brought me in to train their existing engineers, source additional engineers, and code alongside them. We went  from scratch to shipping  Hired for Employers. Asana’s original mobile app was a native-wrapped webview, bursting at the seams. I came in as the  first mobile engineer ; we  rebuilt the app from scratch , fully native, with a new design and the new Asana API. I was founding engineer of the startup Sol Health. We prototyped a few unique CBT-based apps and ultimately shipped Choir, an AV-card-based-experience app designed to reduce stress and spark inspiration.  All technical work  was mine. My technical work included a  multi-threaded Core Data stack  with persistent caches and drafts,  entirely custom UI ,   and the specifications and implementations for the  supporting API and database .   I built an iPhone app implementing the cognitive enhancement game "dual n-back." Praeco was a group communication iPhone app. I came in partway through the project and provided supporting development work to accelerate progress toward completion. I built a C# service for OnviSource that  collated email  from various sources and  heuristically alerted customers  of high-priority incoming content. I wrote the backend for Choir with Node.js and PostgreSQL. I wrote software for OnviSource that automatically  navigated IBM terminal systems , collected relevant data from their character-based interfaces, and converted it into a modern SQL database. This was a hobby labor of love and therefore wildly overengineered and I'm very proud of it :) Written in PHP/MySQL, this was a competition website which centered on user-submitted statistics with multiple complex derived sets of data amounting to  millions of rows in SQL , plus custom integration between my code and the third-party forum and registration software, a  comprehensive and flexible custom HTML theming engine , a database-driven nested request routing structure, a  lightweight CMS , heuristic/rule-based cheat detection algorithms, and it's still online 14 years later. I helped maintain and extend the Triplebyte Rails-based web platform with new behind-the-scenes supporting capabilities. I maintained these PHP-based shopping websites, extending their ability to handle new types of products. I was half of the team on this project for Delta-V Instruments, with an  interface program written in VB.NET  and  low-level driver software in C++ . These chambers controlled temperature and voltage fluctuations for testing I wrote  website scraping scripts  in a consulting capacity for screen-scraper clients. I  reverse engineered videogames  on various 8-bit and 16-bit platforms to do things like extract maps, uncover compression algorithms, and derive formulae. Back when software was written in assembly, software shipped under a megabyte, and browsing in a hex editor or disassembly was a reasonable way to get a feel for the area... those were the days. As the  engineering track co-lead , I helped students transition into tech careers while learning Swift and Javascript and doing real work for real companies. As a Hackbright mentor, I formally met with students once a week to help guide their careers and provide context and feedback on their program work and interviewing, in addition to informal assistance. Contact Me 