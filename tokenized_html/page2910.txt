why is tomcat manager using my loginmodule stack overflow by using our site you acknowledge that you have read and understand our cookie policy privacy policy and our terms of service i 'm running tomcat 6.0.29 and created a realm and loginmodule of my own they are defined in server.xml like so realm classname= mycompany.tomcat.myrepositoryrealm appname= my_realm userclassnames= mycompany.tomcat.identityprincipal roleclassnames= mycompany.tomcat.roleprincipal usecontextclassloader= true i have added the library containing these classes to my tomcat/lib folder other than that i have not changed tomcat from it 's default configuration when i go to fire up the tomcat manager application at http //localhost:9080/manager/html i ca n't log in and the tomcat log shows an error and stacktrace for my login module any ideas thanks edit per request here is the stacktrace my realm connects to a jboss service so that 's why i get the namingcontextfactory error javax.security.auth.login.loginexception can not instantiate class org.jnp.interfaces.namingcontextfactory at mycompany.tomcat.myrepositoryloginmodule.login myrepositoryloginmodule.java:88 at sun.reflect.nativemethodaccessorimpl.invoke0 native method at sun.reflect.nativemethodaccessorimpl.invoke nativemethodaccessorimpl.java:39 at sun.reflect.delegatingmethodaccessorimpl.invoke delegatingmethodaccessorimpl.java:25 at java.lang.reflect.method.invoke method.java:597 at javax.security.auth.login.logincontext.invoke logincontext.java:769 at javax.security.auth.login.logincontext.access 000 logincontext.java:186 at javax.security.auth.login.logincontext 4.run logincontext.java:683 at java.security.accesscontroller.doprivileged native method at javax.security.auth.login.logincontext.invokepriv logincontext.java:680 at javax.security.auth.login.logincontext.login logincontext.java:579 at org.apache.catalina.realm.jaasrealm.authenticate jaasrealm.java:410 at org.apache.catalina.realm.jaasrealm.authenticate jaasrealm.java:335 at mycompany.tomcat.myrepositoryrealm.authenticate myrepositoryrealm.java:34 at org.apache.catalina.authenticator.basicauthenticator.authenticate basicauthenticator.java:181 at org.apache.catalina.authenticator.authenticatorbase.invoke authenticatorbase.java:528 at org.apache.catalina.core.standardhostvalve.invoke standardhostvalve.java:127 at org.apache.catalina.valves.errorreportvalve.invoke errorreportvalve.java:102 at org.apache.catalina.core.standardenginevalve.invoke standardenginevalve.java:109 at org.apache.catalina.connector.coyoteadapter.service coyoteadapter.java:298 at org.apache.coyote.http11.http11processor.process http11processor.java:857 at org.apache.coyote.http11.http11protocol http11connectionhandler.process http11protocol.java:588 at org.apache.tomcat.util.net.jioendpoint worker.run jioendpoint.java:489 at java.lang.thread.run thread.java:619 i was able to figure out the problem security realms can be defined for an engine host or context i had defined the realm for the whole host in server.xml so the tomcat manager application was trying to use it i fixed the problem by defining the realm in a meta-inf/context.xml file inside of my web application click here to upload your image max 2 mib cancel and add another image you can also provide a link from the web log in by clicking post your answer you agree to our terms of service privacy policy and cookie policy 2019 stack exchange inc