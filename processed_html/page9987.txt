Mongodb - How to find string in multiple fields? - Stack Overflow                     By using our site, you acknowledge that you have read and understand our  Cookie Policy ,  Privacy Policy , and our  Terms of Service .                 Using Pymongo for this scenario. I have User that has email, first_name, last_name. I am using this Pymongo snippet: this example works, if I want to find searchString in: now I need to also find searchString in first_name + last_name combined. how can I do that?Is there a way in mongo, through the query, to combine the two into a "fullname" then search the fullname? Easiest way is to add an array field and populate it with all of the variants that you want to search on.  Index that array field. That way you only need one index and your search across all fields is simple and doesn't change when you want to search on some new search variant.  You can also normalize the text you put into the search array, for example, lower casing it, removing punctuation etc. See  https://stackoverflow.com/q/8206188/224370 Edit:  MongoDB's documentation now covers  keyword search  and the new  full-text search  feature. I had the same problem. I already used regex string search, so my solution was: generate a helper collection. Here I combine all relevant string, like: I then use a regexp to creat what i allow to be looked for: This then also gives some flexibility about the order. Searching is not the fastest, since it still uses regex on all elements, but it is ok for me. (I also index the collection on search_field. Getting results also becomes a nested call, since first you need to get the _ids you really want, and then you can query for them like so: This is edited code.. perhaps there is a syntax error, generally, it is working for me.                                 Click here to upload your image                                 (max 2 MiB) Cancel and add another image You can also provide a  link from the web . Log in                                 By clicking “Post Your Answer”, you agree to our  terms of service ,  privacy policy  and  cookie policy 2019 Stack Exchange, Inc 