Change local password as root after configuring for MS-AD Kerberos+LDAP - Server Fault                     By using our site, you acknowledge that you have read and understand our  Cookie Policy ,  Privacy Policy , and our  Terms of Service .                 I have followed this excellent post to configure Kerberos + LDAP: http://koo.fi/blog/2013/01/06/ubuntu-12-04-active-directory-authentication/ However, there are some  local users  used for services. When I try to change the password for one of those, as root, it asks for  Current Kerberos password  then exits: If I switch to the local user and do  passwd , it asks once for Kerberos then falls back to local: $ passwd Current Kerberos password: Changing password for service1. (current) UNIX password: My configuration is similar to the site I posted above, and everything works fine, I just can't change the local users' passwords as root. Thanks in advance for any help. 3.8.0-29-generic #42~precise1-Ubuntu In your /etc/pam.d/common-password , change the minimum_uid in your first line to something bigger than 1000, example: That worked for me. This is what you should see in /var/log/auth.log after changing the password for that user as root: if your users are using kerberos password you can remove kerberos password management from pam, because the kerberos password can be changed with command  kpasswd @Ameer's answer about editing  common-password  is correct. But: when you edit the uid limits of PAM in general, don't forget to edit all the affected PAM files! If you search for  krb5  in  /etc/pam.d , you should find all the relevant files: If, for example, you've only edited  common-auth , but not  common-password , authentication works with local accounts, but  passwd  still asks for the current kerberos password! (Which is exactly the mistake that led me here.)                                 Click here to upload your image                                 (max 2 MiB) Cancel and add another image You can also provide a  link from the web . Log in                                 By clicking “Post Your Answer”, you agree to our  terms of service ,  privacy policy  and  cookie policy 2019 Stack Exchange, Inc 