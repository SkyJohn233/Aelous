How to pass command line arguments with spaces through a variable in bash - Stack Overflow                     By using our site, you acknowledge that you have read and understand our  Cookie Policy ,  Privacy Policy , and our  Terms of Service .                 What I'm trying to achieve is to read command line arguments from a file and invoke a command using them. So essentially I need to pass the arguments through a bash variable. The problem is that some arguments have spaces in them. How can I do that? Not working code, to illustrate the problem: file.txt contents (quotes are there just to show two different arguments): shell script: /some/command  should receive two arguments:  aaa bbb  and  xxx yyy . I do have control of generated file.txt and the shell script itself. If you want to execute your command once for each line found in  file.txt , so each line is a separate argument set, you can do this : The  xargs  utility takes each line it receives on standard input and uses its content as arguments to be provided to the command that is called.  If the file contains only one line, it will work and execute the command only once. The following solution does the same, but works with functions too: Please note that this uses  eval , which means that if  file.txt  contains  malicious content, arbitrary code execution could result.  You must be 100% certain that the data contained in the file is safe. The idea with this technique is that you explode each line into an array (one array element is one argument), and then use an array expansion ( "${args[@]}" ) that expands to a list of all its elements, properly quoted (the quotes around the expansion are important here). As an aside, the  eval  line could be replaced with : But  $line  still gets expanded, so this is no safer than  eval . Use command substitution, to expand the file contents to the command, As an example, using  printf  on it  INCORRECTLY  with  cat  will produce With proper quoting present, arguments are sent as such without getting split.                                 Click here to upload your image                                 (max 2 MiB) Cancel and add another image You can also provide a  link from the web . Log in                                 By clicking “Post Your Answer”, you agree to our  terms of service ,  privacy policy  and  cookie policy 2019 Stack Exchange, Inc 