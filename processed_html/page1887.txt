StockItemRepository gets wrong product id if a product has been deleted · Issue #7057 · magento/magento2 · GitHub GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together. Have a question about this project?  Sign up for a free GitHub account to open an issue and contact its maintainers and the community.   By clicking  Sign up for GitHub , you agree to our  terms of service  and     privacy statement . We’ll occasionally send you account related emails.     Already on GitHub?     Sign in     to your account   3 - After looking in the cataloginventory_stock_item table I can see that the stock of the item is being referenced against the item_id. (See cataloginventory_stock_item image). To get round this issue I have used the \Magento\CatalogInventory\Model\StockState model and getStockQty() function to reference against as this uses the cataloginventory_stock_status table which does reference the product_id. Hi  @lhsatch  , fourth step contain issue  $this- > _stockItemRepository- > get($product_id)  you must pass stock_item_id instead of product_id For obtain stock_item object by product use  $stockItem = $product- > getExtensionAttributes()- > getStockItem();  or configure search criteria (\Magento\CatalogInventory\Api\StockStatusCriteriaInterface)  and use  \Magento\CatalogInventory\Api\StockStatusRepositoryInterface::getList Hi Miakusha, Thank you for getting back to me. Although I have managed to get the stock qty using the StockState class I haven't been able to find a function that will get the product stock state (in stock, out of stock) by product_id. As   $this- > _stockItemRepository- > get($product_id)  is used by referencing the stock_item_id what can be used to get the product stock status? I haven't found anywhere in the catalog_inventory module where I could get the stock status of a product by product_id. Any help would be great. Hi  @lhsatch Actually \Magento\CatalogInventory\Api\Data\StockStatusInterface should answer to all your questions. Long story short: Magento has StockItem entity which represents amount (Qty) of specific product (productId) on a concrete stock (stockId). StockItemInterface should be used when you would like to "write" data into the data storage (like update amount of products to sync up Magento with your ERP system or to make deduction of stock during the checkout process). StockStatusInterface is opposite to it. It should be used to "read" data for representation (on front-end). Consider StockStatus as an index which contains aggregated stock data for each specific product. So, if you would like to get product stock status  (in stock, out of stock) by product_id. You need using StockStatusRepositoryInterface::getList(StockStatusCriteriaInterface $searchCriteria); get StockStatus entity for specified product Hi Maghamed, You are a legend!!!!! That has worked perfectly and the getStockStatus() function works for both 0 quantities and for stock status (out of stock).  Thank you. I'm closing this report as issue was solved. Hi  @maghamed As of Magento Open Source 2.3,  \Magento\CatalogInventory\Api\Data\StockStatusInterface  is apparently now  @deprecated  (despite also being marked as  @api ) in favor of the MSI. I tried to consult the links provided, but  one  of the pages linked near the deprecation notice says I should be using the Read-Only interface (StockItem) to check if a product is in or out of stock while the  other  says that StockItem-related classes and methods got deprecated, for example  StockItemRepositoryInterface::getList I am now a bit confused. What would be the direct (or nearest) replacement to the code you provided above but using the new APIs provided by MSI? 