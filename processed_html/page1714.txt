The Myth of the Full-stack Developer : webdev There will always be people who are generalists and there are people who are specialists. Same as there is a tool for every job, there &# x27;s an employee for every job role. If you need someone to build your newest, fastest streaming video delivery network, you &# x27;d pick a specialist. If you &# x27;re a web agency that &# x27;s turning out websites, Id suppose you &# x27;d prefer a few generalists. I used to know everything from the 8086 instruction set to the packet format for token-ring to the entire FTP protocol. However  that was 30 years ago and there &# x27;s a lot more  " everything "  now, and I know a smaller percentage of  " everything "  by the minute. " Full stack "  is only possible if the stack is small enough. I firmly believe that a good developer must be full-stack, that makes him self-sufficient. Especially since development in general is so similar. A person who can write clean code in PHP will write clean code in JS too. Syntax is not hard to learn Frameworks are not hard to learn also. Especially if you already know 7 " Interviewees were given a maximum of 30 points " . LOL at this. You  formulated a question in such a way that a person can &# x27;t say he is good at everything and then you say your results prove that. Which is a well know  " circular fallacy "  (e.g. I always speak the truth and since I say this about myself I am right). SQL and JS knowledge are not mutually exclusive, this is not an RPG with skill trees. You can &# x27;t give 30 points to a guy who codes day and night and a freshman with a year of experience. But I know how to fix your article: mention a BUDGET. I would believe that hiring a good full-stack developer is much more expensive than a js-developer. Simply becaue a full-stack guy fits more positions and is much more flexible on the market. The chart you used to show stack  " evolution "  is plainly wrong: LAMP is still a vastly more popular stack than NodeJS. You make it seem as if Nginx didnt exist in 2010, and UX wasn &# x27;t a thing then. Coding websites in HTML4 with CSS being interpreted truly differently in different browsers ans when IE support was a must was MUCH more difficult than writing HTML5 with CSS3 sweets that are widely supported now. I still remember tricks I had to do just to center stuff in a div. I think the point isn &# x27;t that a frontend developer should only ever focus on frontend development but that a person should label themselves according to their specialty. Full stack developers do exist (I am one) but you can &# x27;t expect a full stack developer to match the frontend skills of a frontend developer of equal experience. I don &# x27;t even think the MEAN stack is mature enough at this point to consider it a good option for most companies. Angular is going to significantly change. Can &# x27;t say most companies need to switch to a NoSQL database from RDBMS. Can &# x27;t say that I can even remember very significant, breaking changes with the LAMP stack. And its got a lot of serious organizations using it. I agree with your assessment on the authors 30 points fail. Perhaps a better idea is to not ask people to grade themselves but talk about some of the projects they &# x27;ve done and their role on it, etc. If your stack is incredibly simple, maybe it makes sense. There &# x27;s no such thing as self-sufficient at any scale. Sure, developers who are adequately skilled at executing business logic, crafting database schema, writing back-end code, writing CSS, writing JS, machine learning, spam filtering, batch processing, queueing, and the tens or hundreds of secondary and tertiary services associated with a large website do exist... and you can &# x27;t afford them. There are still only 168 hours in the week, and only 40-60 hours in the productive work-week.  It doesn &# x27;t matter if your boy knows how to write SQL, Java, Go, JS, Python, CSS, and docker configs.  He still only has, after meetings, planning, and other interrupts, optimistically 30 hours of productive time per week. So you need biz-logic, machine-learning, map-reduce, back-end, and front-end code written every week.  Are you going to hire 5  " full-stack "  developers and tell them to dedicate 6 hours each to each of those tasks for $300,000/year, or are you going to hire one of each and tell them to dedicate 30 hours/week to one task each for $150,000/year? SQL and JS knowledge are not mutually exclusive, this is not an RPG with skill trees. True, but time is linear and finite.  If you spend time learning SQL you are not spending time learning JS, or vice versa.  You cannot feasibly become an expert in every field, regardless of your intelligence, lack of social commitment, and dedication. In much the same way that in many RPGs you can  " max out "  every skill tree if you play long enough and level high enough, it &# x27;s probably possible to become an expert in all of the things in popular use right now... eventually.  The difference is that in 10 years when you have literally written the book on SQL, Angular, AWS, Python3, Go, CSS, SASS, and whatever other buzzwords you can think of, nobody will care because there will be a whole new set of buzzwords for you to become an expert in. A person who can write clean code in PHP will write clean code in JS too. JS written like PHP can be a mess... While I &# x27;m able to code backend stuff, I wouldn &# x27;t feel qualified for most backend-only jobs. I can do all sorts of web-related work, but at the end of the day, I don &# x27;t call what I do full-stack. I &# x27;m a front-end, it &# x27;s what I specialize in and it shows. I don &# x27;t disagree with your premise, however, the idea of  " 30 points "  is fine.  There &# x27;s no intrinsic value assigned to those points, except that the developer knows the maximum value. It &# x27;s as helpful as any self-rating scheme is (which is very little) in that it determines what the candidate feels are their strongest skill, compared to themselves.  It &# x27;s a useless metric when comparing against  other  developers &# x27; skills. him, guy Women work in software dev too! It would make him  or her  more self-sufficient. Female developers aren &# x27;t mythical creatures. They are more common than full-stack developers, which is a vague term that gets thrown around all too loosely. Being a Jack of all Trades is wonderful, if I may say so myself. It enables you to give the client a great bundle of services, and you know when you need an expert for certain tasks. Being a generalist also enables you to supervise the expert &# x27;s work, knowing what to ask for and how the final outcome should look like. 396k Members 720 Online Jan 25, 2009 Cake Day 