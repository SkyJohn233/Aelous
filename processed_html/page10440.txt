GitHub - buzinas/tslint-eslint-rules: Improve your TSLint with the missing ESLint rules GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.               Use Git or checkout with SVN using the web URL.                           Want to be notified of new releases in               buzinas/tslint-eslint-rules ?             If nothing happens,  download GitHub Desktop  and try again. Go back If nothing happens,  download GitHub Desktop  and try again. Go back If nothing happens,  download Xcode  and try again. Go back If nothing happens,  download the GitHub extension for Visual Studio  and try again. Go back You want to code in TypeScript but miss all the rules available in ESLint? Now you can combine both worlds by using this TSLint plugin! In your  tslint.json  file, source the rules from this package, e.g: You can also add other tslint config packages to combine these rules with other custom community rules. In your  tslint.json  file, insert the rules as described below. The following tables shows all the existing ESLint rules and the similar rules available in TSLint.Please refer to the following icons as they provide the status of the rule. The following rules point out areas where you might have made mistakes. These are rules designed to prevent you from making mistakes. They eitherprescribe a better way of doing something or help you avoid footguns. These rules relate to using strict mode. These rules have to do with variable declarations. These rules are specific to JavaScript running on Node.js or using CommonJS in the browser. These rules are purely matters of style and are quite subjective. These rules are only relevant to ES6 environments. Bugs, rules requests, doubts etc., open a Github  Issue . If you want to create one of the missingrules or fix/improve some existing rule please check out the  contribution guide . MIT 