Objects   Gammu 1.41.0 documentation For various (mostly historical) reasons, all objects you get from Gammu arenot real objects but rather a dictionaries. This has quite a big impact ofusability and will most likely change in the future. All the objects basically map to C structures, so you might also refer to libGammu  chapter. Object describing single SMS message in a way GSM network handles is (140bytes of data). You can construct it from  SMS Info Object  using gammu.EncodeSMS() . Message dictionary can consist of following fields: SMSC information, see  SMSC Object . Recipient number, needs to be set for sending. Name of the message, does not make any effect on sending, some phones mightstore it. User defined headers for SMS, see  UDH Object . Message text Folder where the message is stored Location where the message is stored Indication whether folder is an inbox Message delivery status, used only for received messages Flag indicating whether reply using same SMSC is requested Message class Message reference number, used mostly to identify delivery reports Id of message which this message is supposed to replace Whether to reject duplicates Memory where the message is stored Message type, one of: Message encoding, one of: Timestamp when the message was received or sent. Please note that most phones do no record timestamp of sent messages. Timestamp when the message was at SMSC. Message state, one of: Examples: UDH dictionary can consist of following fields: 8-bit ID of the message, not required 16-bit ID of the message, not required Number of current part Count of all message parts UDH type, one of predefined strings: UDH content Example: SMSC dictionary can consist of following fields: Location where the SMSC is stored SMSC number Name of the SMSC configuration Default recipient number, ignored on most phones Default message format, one of: Default message validity as a string Example: Message info dictionary can consist of following fields: Whether to use Unicode for the message. Id of message which this message is supposed to replace Boolean flag indicating there was some part which Gammu could not decode. Message class Actual message data, see  SMS Info Part Object . Example: Message component can consist of following fields: Identification of the part type: Text formatting Text formatting Text formatting Text formatting Text formatting Text formatting Text formatting Text formatting Text formatting Whether message part should be protected (DRM) Number to encode in message. Ringtone to encode in message. Bitmap to encode in message. Bookmark to encode in message. Settings to encode in message. MMS indication to encode in message. Phonebook entry to encode in message, see  Phonebook Object . Calendar entry to encode in message, see  Calendar Object . Todo entry to encode in message, see  Todo Object . File to encode in message, see  File Object . String to encode in message. Todo entry is a dictionary consisting of following fields: Location where the entry is stored Type of entry, one of: Entry priority, one of: Actual entries, see  Todo Entries Object Example: Type of entry, one of: Actual value, corresponding type to Type field. Calendar entry is a dictionary consisting of following fields: Location where the entry is stored Type of entry, one of: Actual entries, see  Calendar Entries Object Example: Type of entry, one of: Actual value, corresponding type to Type field. Phonebook entry is a dictionary consisting of following fields: Location where the entry is stored Memory where the message is stored Actual entries, see  Phonebook Entries Object Example: Type of entry, one of: Location for the field: Actual value, corresponding type to Type field. Type of picture which is stored in Value field (only for Picture fields). File is a dictionary consisting of following fields: Number of bytes used by this file. File name. Boolean value indicating whether this is a folder. Depth of file on the filesystem. File type, one of: Full file name including path. Content of the file. Timestamp of last change Boolean value indicating whether file is protected (DRM). Boolean value indicating whether file is read only. Boolean value indicating whether file is hidden. Boolean value indicating whether file is system. Current position of file upload Boolean value indicating completed file transfer. Example: The divert type can have one of following values: The call type for diverts can have one of following values: When to do the divert, see  Divert Type . What call types to divert, see  Call Type . Phone number where to divert. Timeout after which the divert will happen. 