A Runge–Kutta discontinuous Galerkin method for the Euler equations - ScienceDirect ScienceDirect This paper presents a Runge–Kutta discontinuous Galerkin (RKDG) method for the Euler equations of gas dynamics from the viewpoint of kinetic theory. Like the traditional gas-kinetic schemes, our proposed RKDG method does not need to use the characteristic decomposition or the Riemann solver in computing the numerical flux at the surface of the finite elements. The integral term containing the non-linear flux can be computed exactly at the microscopic level. A limiting procedure is carefully designed to suppress numerical oscillations. It is demonstrated by the numerical experiments that the proposed RKDG methods give higher resolution in solving problems with smooth solutions. Moreover, shock and contact discontinuities can be well captured by using the proposed methods. This paper is concerned with the construction of high-order Runge–Kutta discontinuous Galerkin (RKDG) methods for the Euler equations of gas dynamics. The Euler equations governing inviscid compressible fluid flows can be written in the following compact form: (1.1) ∂ U ∂ t +∑ i=1 d ∂ F i (U) ∂ x i =0, where  d  is the space dimension,  x =( x 1 ,…, x d ), and the conversion vector  U  and flux  F i ( U ) are given by (1.2) U= ρ ρu 1 ⋯ ρu d E , F i (U)= ρu i ρu 1 u i +δ 1,i p ⋯ ρu d u i +δ d,i p u i (E+p) . In  (1.2) ,  ρ  is the fluid density,  u =( u 1 ,…, u d ) T  is the fluid velocity vector,  p  is the fluid pressure,  E=ρ(e+ 1 2 u 2 )  is the total energy,  u 2 = u 1 2 +⋯+ u d 2 , and  δ i , j  is the Kronecker delta. For an ideal gas, the thermal energy is related to the gas pressure through the relation (1.3) p=(γ−1)ρe, where  γ  is the ratio of the specific heats. The first discontinuous Galerkin (DG) finite element method was introduced by Reed and Hill  [19]  to solve a steady-state linear hyperbolic equation such as  σu+ div ( a ̄ u)=f , where  σ  is a real number and  ā  a constant vector. A major development of the DG method was carried out by Cockburn and co-workers  [8] ,  [9] ,  [10] ,  [13] ,  [14]  in a series of papers. In  [8] , a general framework is established for the one dimensional case. An analysis of the accuracy and stability in terms of total variation is also given there. In  [14] , the RKDG method is applied to one-dimensional systems. The multidimensional extension of RKDG methods is given in  [10] ,  [13] . In  [13] , a slope limiter is first designed on general triangulations. It maintains a high order of accuracy in smooth regions and guarantees maximum norm stability. Jiang and Shu  [15]  proved that the DG method for the scalar case satisfies a local cell entropy inequality for the square entropy for arbitrary triangulations in any space dimension, and for any order of accuracy. Their results with shocks imply  L 2  stability of the method for non-linear problems in the scalar case. In  [1] , Atkins and Shu gave a quadrature-free implementation of discontinuous Galerkin methods for hyperbolic equations in order to avoid the use of discrete quadrature formulas. They have shown that a quadrature-free RKDG requires less computational time and storage than conventional implementations but preserves the compactness and robustness inherent in the RKDG methods. In  [32] , Zhou et al. gave a numerical comparison of WENO finite volume and Runge–Kutta discontinuous Galerkin methods. When the solutions to  (1.1)  are smooth or have weak discontinuities, they can be resolved by using the RKDG methods without further modification. However, if the discontinuities are strong, the RKDG methods will generate significant oscillations and even non-linear instability. To avoid such difficulties, typically a limiting procedure is used after each Runge–Kutta inner stage or after some complete Runge–Kutta steps. Many types of limiters have been proposed, for example, the minmod type limiters used by Cockburn and co-workers  [8] ,  [9] ,  [10] ,  [13] ,  [14] , the moment-based limiters proposed by Biswas et al.  [3] , and the more recent one given by Burbeau et al.  [4] . However, when the limiters are applied to the problem containing a stronger discontinuity, e.g. Rayleigh–Taylor instability problem, it may heavily diffuse the interface  [18] . Like typical finite element methods, the RKDG methods are better suited than finite difference methods to handle complicated geometries and arbitrary triangulations. Due to the discontinuous nature of the solution and the test function space, the solution is marched explicitly in time. Moreover, they can easily handle adaptivity strategies and parallel implementation due to their compactness and local communications. For these reasons, they have been widely used in practical applications. Some examples can be found in  [3] ,  [18] . We also refer the reader to several review papers and lecture notes, e.g.  [7] ,  [11] ,  [12] , and reference therein. In the past few years, the development of gas-kinetic schemes for compressible flow simulations, such as the kinetic flux-vector splitting (KFVS) scheme and the BGK-type scheme, has become mature. The gas-kinetic schemes have provided robust and accurate numerical solutions for various unsteady compressible flows, see  [16] ,  [17] ,  [24] ,  [25] ,  [26] ,  [30] ,  [31]  and references therein. Some theoretical analysis has also been carried out for the gas-kinetic schemes, see e.g.  [27] ,  [28] , etc. The purpose of this paper is to construct a quadrature-free RKDG method with higher-order accuracy for the Euler equations from the viewpoint of gas-kinetic theory. Like the traditional gas-kinetic schemes, the present RKDG method does not need the characteristic decomposition and the Riemann solver in computing the numerical flux at the surface of the finite elements. The integral term containing the non-linear flux can be computed exactly at the microscopic level. Moreover, a limiting procedure is carefully designed that preserves the accuracy in smooth regions and limits oscillations near the discontinuities. Some numerical experiments are conducted to validate the accuracy of the scheme and to demonstrate its ability in capturing discontinuities. The paper is organized as follows. In Section  2 , we give a brief review of the gas-kinetic theory that will be used in this paper. In Section  3 , we construct the DG spatial discretization for the Euler equations, which is quadrature-free at both microscopic and macroscopic levels. Then, a fully high-order accurate DG method is obtained by using higher-order Runge–Kutta methods to discretize the resulting semi-discrete system in time. A limiting procedure is designed in Section  4 . Numerical results will be reported in Section  5 . Some concluding remarks will be made in Section  6 . Fundamental to fluid mechanics is the microscopic description, which is based on the particle motion or statistical description of a fluid. Due to the large number of particles in small volume in common situations, to follow each one is impossible. Instead, a continuous distribution  f ( x , t , v ) is often used to describe the probability of particles to be located in a certain velocity interval and to approximate the particle number density at a certain velocity. The distribution function  f ( x , t , v ) is a basic unknown in the kinetic theory of gases, and obeys a particle transport equation, known as the Boltzmann equation, which may be written in the following form: (2.1) ∂ f ∂ t +∑ d i=1 v i ∂ f ∂ x i =J(f,f), where  v =( v 1 ,…, v d ) T  denotes the particle velocity and the right-hand side term  J ( f , f ) represents a particle collision term which is in a complex integral form. In this paper, we are not interested in the detailed formulation of the collision term, because it will vanish in the case we consider now. The thermodynamic aspect of hydrodynamical equations is based on the assumption that departure of the gas from a local equilibrium state is sufficiently small. The real distribution function  f ( x , t , v ) is usually unknown in the real flow situation, but in classical physics we know a special distribution function, i.e. Maxwellian distribution function, corresponding to a local equilibrium state, if the mass, momentum, and energy densities of the gas are known. For this distribution the collision term vanishes. We refer the reader to  [5] ,  [6]  for a detailed description of the gas-kinetic theory. The Maxwellian distribution  g  can be defined as follows: (2.2) g( x ,t, v )=ρ λ π (K+d)/2 e −λ(( v − u ) 2 +ξ 2 ) , where  K  denotes the total number of degrees of freedom in the internal degree of freedom variable  ξ , λ = m /2 kT ,  m  denotes the particle mass,  k  is the Boltzmann constant, and  T  is the fluid temperature, and ( v − u ) 2 =∑ d i=1 (v i −u i ) 2 , ξ 2 =∑ K i=1 ξ 2 i . In a two-dimensional flow of a diatomic gas with  γ= 7 5 , the random particle motion in the  z -direction is included into the internal variable  ξ  and  K  is equal to 3 to account for the particle motion in the  z -direction and two rotational degrees of freedom. For an ideal gas, the relations  λ = ρ /2 p  and  K =− d +2/( γ −1) are available. The relation between the macroscopic variables with the distribution functions  f  and  g  is as follows: (2.3) U=∫ R K+d Ψf( x ,t, v ) d v d ξ=∫ R K+d Ψg( x ,t, v ) d v d ξ, where  Ψ  denotes the vector of moments defined as (2.4) Ψ= 1,v 1 ,…,v d , 1 2 ( v 2 +ξ 2 ) T , and  d v d ξ= d v 1 ⋯ d v d d ξ 1 ⋯ d ξ d  denotes the volume element in the phase space. Thus the Euler equation  (1.1)  can be recast as follows: (2.5) ∂ ∂ t ∫ R K+d Ψg( x ,t, v ) d v d ξ+∑ d i=1 ∂ ∂ x i ∫ R K+d v i Ψg( x ,t, v ) d v d ξ=0. The KFVS scheme is established based on  (2.5) . The main idea is to integrate  (2.5)  over a finite control volume in the physical space and to approximate the numerical fluxes at the surface of the control volume according to the sign of the normal component of the particle velocity. On the other hand, as shown in  [17] , the KFVS scheme can also be considered as a moment in terms of  Ψ  of the upwind scheme of the following collisionless Boltzmann equation (2.6) ∂ g ∂ t +∑ d i=1 v i ∂ g ∂ x i =0. In the next section, we will construct DG space discretization for the Euler equation  (1.1)  based on  (2.6) . This subsection is concerned with the DG spatial discretization for  (1.1)  in one-space dimension, i.e. (3.1) ∂ U ∂ t + ∂ F(U) ∂ x =0, where the conservative vector  U  and the corresponding flux  F  are of the form (3.2) U= ρ ρu E , F(U)= ρu ρu 2 p u(E+p) . For this special case, the moment vector is reduced to Ψ= 1 v 1 2 (v 2 +ζ 2 ) . For a given partition of the physical domain,  {x j | j∈ Z } , we set  I j+ 1 2 =(x j ,x j+1 ) ,  h j+ 1 2 =x j+1 −x j , and  x j+ 1 2 = 1 2 (x j+1 +x j )  for all  j∈ Z . Our purpose is to seek an approximation  U h  to  U  such that for each time  t∈[0,T], U h (·,t)  belongs to the finite dimensional space (3.3) V q h = V∈L 1 ( R ) | V(x)∈P q I j+ 1 2 if x∈I j+ 1 2 ∀j∈ Z , where  P q (I j+ 1 2 )  denotes the space of polynomials on  I j+ 1 2  of degree at most  q . For the sake of simplicity, we will choose the Legendre polynomials  P l ( s ) as local basis functions. Then we can exploit sufficiently their  L 2 -orthogonality (3.4) ∫ 1 −1 P l (s)P l ′ (s) d s= 2 2l+1 δ l,l ′ , l⩽l ′ to obtain a diagonal mass matrix. For  x∈ R , we now may express our approximate solution  U h  as follows: (3.5) U h (x,t)=∑ q i=0 U (l) j+ 1 2 (t)φ (l) j+ 1 2 (x):=U j+ 1 2 (x,t), if x∈I j+ 1 2 , where (3.6) φ (l) j+ 1 2 (x)=P l (ξ), ξ= 2 x−x j+ 1 2 h j+ 1 2 . In order to get a quadrature-free DG space discretization, we define for the local equilibrium distribution  g  the  L 2 -projection  g h  onto  V q h  to obtain (3.7) g h (x,t,v)=∑ q l=0 g (l) j+ 1 2 (t)φ (l) j+ 1 2 (x)=:g j+ 1 2 (x,t,v), if x∈I j+ 1 2 . The microscopic degrees of freedom  g (l) j+ 1 2 (t)  can be determined by the macroscopic degrees of freedom  U (l) j+ 1 2 (t)  according to the moment relation  (2.3)  and the  L 2 -orthogonality of the local basis functions, in other words, we may establish a relation between the macroscopic and microscopic degrees of freedom,  U (l) j+ 1 2 (t)  and  g (l) j+ 1 2 (t) . Taking the moments of  g h  in terms of  Ψ  gives (3.8) ∑ q l=0 U (l) j+ 1 2 (t)φ (l) j+ 1 2 (x)=∑ q l=0 ∫ R K+1 Ψg (l) j+ 1 2 (t)φ (l) j+ 1 2 (x) d v d ξ. Multiply  (3.8)  by  φ (l ′ ) j+ 1 2 (x)  and using the  L 2 -orthogonality of the Legendre polynomials, we get (3.9) U (l) j+ 1 2 (t)=∫ R K+1 Ψg (l) j+ 1 2 (t) d v d ξ, l=0,…,q. These are implicit relations between the microscopic and macroscopic degrees of freedom  U (l) j+ 1 2 (t)  and  g (l) j+ 1 2 (t) . The microscopic degrees of freedom  g (l) j+ 1 2 (t)  for  l ⩾1 can be considered as the corresponding slopes of  g h ( x , t , v ). They depend on the particle velocities and can be obtained from the Taylor expansion of a Maxwellian, see  [30] ,  [31] . To obtain explicit formulas, we do the following. First, for  l =0, we define (3.10) g (0) j+ 1 2 =ρ (0) j+ 1 2 (t) λ (0) j+ 1 2 π (K+1)/2 e −λ (0) j+ 1 2 v−u (0) j+ 1 2 2 +ξ 2 . Next, using ideas from high resolution gas-kinetic BGK schemes of Xu, we expand the microscopic degrees of freedom  g (l) j+ 1 2 (t)  for  l ⩾1 in the following form: (3.11) g (l) j+ 1 2 =g (0) j+ 1 2 1·a (l) 1 +v·a (l) 2 + 1 2 (v 2 +ξ 2 )·a (l) 3 . Substituting this into  (3.9)  gives a 3 × 3 linear system (3.12) 1 u E u u 2 + p ̃ u( E + p ̃ ) E u( E + p ̃ ) E 2 +2 E p ̃ − p ̃ γ−1 x 1 x 2 x 3 =U (l) j+ 1 2 (t)=: y 1 y 2 y 3 , where  x i := ρa ( l ) i ,  p ̃ =p/ρ ,  E =E/ρ . Its solutions can be obtained in an explicit form as follows: (3.13) x 3 = γ−1 p ̃ 2 u 2 2 y 1 −uy 2 +y 3 − 1 p ̃ y 1 , x 2 = 1 p ̃ (y 2 −uy 1 )−ux 3 , x 1 = 1+ u 2 p ̃ y 1 − u p ̃ y 2 − p ̃ γ−1 − u 2 2 x 3 . Remark 3.1 In Eqs.  ,  , we have omitted the subscript “ j+ 1 2 ” and the superscript “(0)” of the macroscopic variables. The expansion given in  (3.11)  does not influence the accuracy of the scheme. It will be validated by our numerical experiments. In the following, we will establish a weak formulation to determine the approximate solution  U h . We multiply  (2.6)  by an arbitrary test function  V h  from the finite element space  V g h , integrate it over the finite element  I j+ 1 2 , j∈ Z , and replace the “exact” solution  g  by its approximation  g h ∈ V g h (3.14) d d t ∫ I j+ 1 2 g h (x,t,v)V h (x) d x+∫ I j+ 1 2 v ∂ ∂ x g h (x,t,v) V h (x) d x=0 ∀V h (x)∈ V g h . Using a simple formal integration by parts and taking  V h (x)=φ (l) j+ 1 2 (x)  gives (3.15) h j+ 1 2 2l+1 d d t g (l) j+ 1 2 +vg h φ (l) j+ 1 2 (x) x j+1 x j =∫ I j+ 1 2 vg h (x,t,v) d d x φ (l) j+ 1 2 (x) d x for all  j∈ Z  and  l =0,…, q . Since the function  g h ( x , t , v ) is discontinuous at the points  x j ,  j∈ Z , we must replace the fluxes  vg h ( x j +1 , t , v ) and  vg h ( x j , t , v ) by numerical fluxes that depend on the two values of  g h  at the points ( x j +1 , t ) and ( x j , t ), respectively. It is more robust to give a numerical flux at the interface of the element  I j+ 1 2  according to the sign of the particle velocity  v , for example, (3.16) vg h (x j ,t,v)≈ vg j− 1 2 (x j ,t,v), v > 0, vg j+ 1 2 (x j ,t,v), v < 0. Thus, using the local transformation  ξ= 2(x−x j+ 1 2 ) h j+ 1 2 , and the property of the Legendre polynomials that  P l (1)=1 and  P l (−1)=(−1) l , we have the following weak formulation at the microscopic level: (3.17) h j+ 1 2 2l+1 d d t g (l) j+ 1 2 +v + g j+ 1 2 (x j+1 ,t,v)+v − g j+ 3 2 (x j+1 ,t,v)−(−1) l v + g j− 1 2 (x j ,t,v)+v − g j+ 1 2 (x j ,t,v) =∫ 1 −1 vg h (ξ,t,v) d d ξ φ (l) j+ 1 2 (ξ) d ξ for all  j∈ Z  and  l =0,1,…, q , where  v ± = 1 2 (v±|v|) . At the microscopic level, the integral terms in  (3.17)  can be computed exactly. As an example, we give them for a special case of  q =3 as follows: (3.18) h j+ 1 2 d d t g (0) j+ 1 2 + v + g j+ 1 2 (x j+1 ,t,v)+v − g j+ 3 2 (x j+1 ,t,v)−v + g j− 1 2 (x j ,t,v)−v − g j+ 1 2 (x j ,t,v) =0, (3.19) h j+ 1 2 3 d d t g (1) j+ 1 2 + v + g j+ 1 2 (x j+1 ,t,v)+v − g j+ 3 2 (x j+1 ,t,v)+v + g j− 1 2 (x j ,t,v)+v − g j+ 1 2 (x j ,t,v) =2vg (0) j+ 1 2 , (3.20) h j+ 1 2 5 d d t g (2) j+ 1 2 + v + g j+ 1 2 (x j+1 ,t,v)+v − g j+ 3 2 (x j+1 ,t,v)−v + g j− 1 2 (x j ,t,v)−v − g j+ 1 2 (x j ,t,v) =2vg (1) j+ 1 2 , (3.21) h j+ 1 2 7 d d t g (3) j+ 1 2 + v + g j+ 1 2 (x j+1 ,t,v)+v − g j+ 3 2 (x j+1 ,t,v)+v + g j− 1 2 (x j ,t,v)+v − g j+ 1 2 (x j ,t,v) =2v g (0) j+ 1 2 +g (2) j+ 1 2 . Finally, taking the moments of  ,  ,  ,   in terms of  Ψ , we get a weak formulation at the macroscopic level, that is to say, the approximate solution  U h  given by the DG space discretization is defined as the solution of the moments of  (3.17) , i.e. (3.22) h j+ 1 2 d d t U (0) j+ 1 2 +F + j+ 1 2 −F + j− 1 2 +F − j+ 3 2 −F − j+ 1 2 =0, (3.23) h j+ 1 2 3 d d t U (1) j+ 1 2 +F + j+ 1 2 +F + j− 1 2 +F − j+ 3 2 +F − j+ 1 2 =2F (0) j+ 1 2 , (3.24) h j+ 1 2 5 d d t U (2) j+ 1 2 +F + j+ 1 2 −F + j− 1 2 +F − j+ 3 2 −F − j+ 1 2 =2F (1) j+ 1 2 , (3.25) h j+ 1 2 7 d d t U (3) j+ 1 2 +F + j+ 1 2 +F + j− 1 2 +F − j+ 3 2 +F − j+ 1 2 =2 F (0) j+ 1 2 +F (2) j+ 1 2 , where F ± j+ 1 2 =∫ R K+1 v + Ψg j+ 1 2 (x j+1 ,t,v) d v d ξ=∑ q l=0 F +,(l) j+ 1 2 , F − j+ 1 2 =∫ R K+1 v − Ψg j+ 1 2 (x j+1 ,t,v) d v d ξ=∑ q l=0 (−1) l F −,(l) j+ 1 2 , and F ±,(l) j+ 1 2 =∫ R K+1 v ± Ψg (l) j+ 1 2 d v d ξ, F (l) j+ 1 2 =∫ R K+1 vΨg (l) j+ 1 2 d v d ξ. The fluxes  F ±,(l) j+ 1 2  and  F 0,(l) j+ 1 2 :=F (l) j+ 1 2  can be represented as F ν,(l) =ρ a (l) 1 [v 1 ] ν +a (l) 2 [v 2 ] ν +a (l) 3 [v 3 ] ν a (l) 1 [v 2 ] ν +a (l) 2 [v 3 ] ν +a (l) 3 [v 4 ] ν a (l) 1 [v 3 ] ν +a (l) 2 [v 4 ] ν +a (l) 3 [v 5 ] ν , where the subscript  ν =−, or +, or 0, ( a (0) 1 , a (0) 2 , a (0) 3 )=(1,0,0), and [v 3 ] ν := 1 2 ([v 3 ] ν +[v 1 ] ν [ξ 2 ]), [v 4 ] ν := 1 2 ([v 4 ] ν +[v 2 ] ν [ξ 2 ]), [v 5 ] ν := 1 4 ([v 5 ] ν +2[v 3 ] ν [ξ 2 ]+[v 1 ] ν [ξ 4 ]). In the above, the moments are given as follows: [ξ 2 ]= K 2λ ,[ξ 4 ]= K(K+2) 4λ 2 ,[v 0 ] 0 =1,[v 1 ] 0 =u, [v 0 ] ± = 1 2 erfc (∓ λ u),[v 1 ] ± =u[v 0 ] ± ± 1 2 πλ e −λu 2 , [v n+2 ] ν =u[v n+1 ] ν + n+1 2λ [v n ] ν ,n=0,1,…, where the subscript  ν  represents 0, −, or +, and the complementary error function erfc( x ) is generally a given internal function in FORTRAN or MATLAB. This subsection will extend DG spatial discretization to two-dimensional case. In order to simplify the explanation of the scheme, we restrict our attention to a rectangular partition of the computational domain. In the following we set  x =( x 1 , x 2 )≡( x , y ) and  I j+ 1 2 ,k+ 1 2 =[x j ,x j+1 ]×[y k ,y k+1 ]  for finite elements,  h 1 j+ 1 2 =x j+1 −x j ,  h 2 k+ 1 2 =y k+1 −x k ,  x j+ 1 2 = 1 2 (x j+1 +x j ) , and  y k+ 1 2 = 1 2 (y k+1 +y k )  for all  j,k∈ Z , and seek an approximation  U h  to  U  such that for each time  t∈ [0,T] ,  U h  belongs to the finite dimensional space: (3.26) V 1 h = V( x )∈ Span P 0 ( x ),P 1 ( x ),P 2 ( x ) , x ∈I j+ 1 2 ,k+ 1 2 , ∀j,k∈ Z , where  P 0 ( x )=1,  P 1 ( x )=2(x−x j+ 1 2 )/h 1 j+ 1 2 ,  P 2 ( x )=2(y−y k+ 1 2 )/h 2 k+ 1 2 . Thus, we may express our approximation solution  U h  as follows: U h ( x ,t)=U (0) j+ 1 2 ,k+ 1 2 (t)+U (1) j+ 1 2 ,k+ 1 2 (t)P 1 ( x )+U (2) j+ 1 2 ,k+ 1 2 (t)P 2 ( x ), x ∈I j+ 1 2 ,k+ 1 2 , and define  L 2 -projection  g h  of the local equilibrium distribution  g  onto  V 1 h  by (3.27) g h ( x ,t, v )=g (0) j+ 1 2 ,k+ 1 2 (t)+g (1) j+ 1 2 ,k+ 1 2 (t)P 1 ( x )+g (2) j+ 1 2 ,k+ 1 2 (t)P 2 ( x ), x ∈I j+ 1 2 ,k+ 1 2 . Similarly, an implicit relation between the macroscopic and microscopic degrees of freedom,  U (l) j+ 1 2 ,k+ 1 2 (t)  and  g (l) j+ 1 2 ,k+ 1 2 (t)  can be given as follows: (3.28) U (l) j+ 1 2 ,k+ 1 2 (t)=∫ R K+2 Ψg (l) j+ 1 2 ,k+ 1 2 (t) d v d ξ, l=0,1,2. In order to give explicit formulas for  g (l) j+ 1 2 ,k+ 1 2 (t)  we define (3.29) g (0) j+ 1 2 ,k+ 1 2 (t)=ρ (0) j+ 1 2 ,k+ 1 2 λ (0) j+ 1 2 ,k+ 1 2 π (K+2)/2 e −λ (0) j+ 1 2 ,k+ 1 2 v − u (0) j+ 1 2 ,k+ 1 2 2 +ξ 2 and expand the microscopic degrees of freedom  g (l) j+ 1 2 ,k+ 1 2 (t)  for  l ⩾1 in the following form: (3.30) g (l) j+ 1 2 ,k+ 1 2 (t)=g (0) j+ 1 2 ,k+ 1 2 (t) 1·a (l) 1 +v 1 ·a (l) 2 +v 2 ·a (l) 3 + 1 2 ( v 2 +ξ 2 )·a (l) 4 . From  ,  ,  , we may derive a 4×4 linear system 1 u 1 u 2 E u 1 (u 1 ) 2 + p ̃ u 1 u 2 u 1 ( E + p ̃ ) u 2 u 1 u 2 (u 2 ) 2 + p ̃ u 2 ( E + p ̃ ) E u 1 ( E + p ̃ ) u 2 ( E + p ̃ ) E 2 +2 E p ̃ − p ̃ γ−1 x 1 x 2 x 3 x 4 =U (l) j+ 1 2 ,k+ 1 2 (t)=: y 1 y 2 y 3 y 4 . Solving it gives (3.31) x 4 = γ−1 p ̃ 2 u 2 2 y 1 −u 1 y 2 −u 2 y 3 +y 4 − 1 p ̃ y 1 , x 3 = 1 p ̃ (y 3 −u 2 y 1 )−u 2 x 4 , x 2 = 1 p ̃ (y 2 −u 1 y 1 )−u 1 x 4 , x 1 = 1+ u 2 p ̃ y 1 − u 1 p ̃ y 2 − u 2 p ̃ y 3 − p ̃ γ−1 − u 2 2 x 4 , where  x i := ρa ( l ) i ,  p ̃ =p/ρ ,  E =E/ρ . In the following, we will establish a weak formulation for the approximate solution  U h . We multiply  (2.6)  by an arbitrary test function  V h  from the finite element space  V 1 h , integrate it over the finite element  I j+ 1 2 ,k+ 1 2 ,  j,k∈ Z , and replace the “exact” solution  g  by its approximation  g h ∈ V 1 h (3.32) ∂ ∂ t ∫ I j+ 1 2 ,k+ 1 2 V h ( x )g h ( x ,t, v ) d x +∫ I j+ 1 2 ,k+ 1 2 v 1 ∂ g h ( x ,t, v ) ∂ x +v 2 ∂ g h ( x ,t, v ) ∂ y V h ( x ) d x =0, ∀V h ( x )∈ V 1 h . Using a simple formal integration by parts gives (3.33) ∂ ∂ t ∫ I j+ 1 2 ,k+ 1 2 V h ( x )g h ( x ,t, v ) d x +∫ ∂ I j+ 1 2 ,k+ 1 2 v n g h ( x ,t, v )V h ( x ) d S=∫ I j+ 1 2 ,k+ 1 2 g h ( x ,t, v ) v 1 ∂ V h ( x ) ∂ x +v 2 ∂ V h ( x ) ∂ y d x , or equivalently (3.34) ∂ ∂ t ∫ I j+ 1 2 ,k+ 1 2 V h ( x )g h ( x ,t, v ) d x +∫ y k+1 y k v 1 g h (x j+1 ,y,t, v )V h (x j+1 ,y) d y−∫ y k+1 y k v 1 g h (x j ,y,t, v )V h (x j ,y) d y+∫ x j+1 x j v 2 g h (x,y k+1 ,t, v )V h (x,y k+1 ) d x−∫ x j+1 x j v 2 g h (x,y k ,t, v )V h (x,y k ) d x=∫ I j+ 1 2 ,k+ 1 2 g h ( x ,t, v ) v 1 ∂ V h ( x ) ∂ x +v 2 ∂ V h ( x ) ∂ y d x for all  j,k∈ Z , where  v n = v 1 n x + v 2 n y , and  n =( n x , n y ) denotes the outward unit normal to d S . According to the sign of the particle velocity  v i , we may approximate the fluxes  v 1 g h ( x j , y , t , v ) and  v 2 g h ( x , y k , t , v ) as follows: v 1 g h (x j ,y,t, v )≈ v 1 g j− 1 2 ,k+ 1 2 (x j ,y,t, v ), v 1 > 0, v 1 g j+ 1 2 ,k+ 1 2 (x j ,y,t, v ), v 1 < 0, v 2 g h (x,y k ,t, v )≈ v 2 g j+ 1 2 ,k− 1 2 (x,y k ,t, v ), v 2 > 0, v 2 g j+ 1 2 ,k+ 1 2 (x,y k ,t, v ), v 2 < 0. Taking  V h ( x )= P i ( x ),  i =0,1,2, respectively, we have the following weak formulation at the microscopic level: (3.35) h 1 j+ 1 2 h 2 k+ 1 2 d d t g (0) j+ 1 2 ,k+ 1 2 +h 2 k+ 1 2 v + 1 (g (0) +g (1) ) j+ 1 2 ,k+ 1 2 +v − 1 (g (0) −g (1) ) j+ 3 2 ,k+ 1 2 −v + 1 (g (0) +g (1) ) j− 1 2 ,k+ 1 2 −v − 1 (g (0) −g (1) ) j+ 1 2 ,k+ 1 2 +h 1 j+ 1 2 v + 2 (g (0) +g (2) ) j+ 1 2 ,k+ 1 2 +v − 2 (g (0) −g (2) ) j+ 1 2 ,k+ 3 2 −v + 2 (g (0) +g (2) ) j+ 1 2 ,k− 1 2 +v − 2 (g (0) −g (2) ) j+ 1 2 ,k+ 1 2 =0, (3.36) h 1 j+ 1 2 h 2 k+ 1 2 3 d d t g (1) j+ 1 2 ,k+ 1 2 +h 2 k+ 1 2 v + 1 (g (0) +g (1) ) j+ 1 2 ,k+ 1 2 +v − 1 (g (0) −g (1) ) j+ 3 2 ,k+ 1 2 +v + 1 (g (0) +g (1) ) j− 1 2 ,k+ 1 2 +v − 1 (g (0) −g (1) ) j+ 1 2 ,k+ 1 2 + h 1 j+ 1 2 3 v + 2 g (1) j+ 1 2 ,k+ 1 2 +v − 2 g (1) j+ 1 2 ,k+ 3 2 −v + 2 g (1) j+ 1 2 ,k− 1 2 −v − 2 g (1) j+ 1 2 ,k+ 1 2 =2h 2 k+ 1 2 v 1 g (0) j+ 1 2 ,k+ 1 2 , (3.37) h 1 j+ 1 2 h 2 k+ 1 2 3 d d t g (2) j+ 1 2 ,k+ 1 2 +h 1 j+ 1 2 v + 2 (g (0) +g (2) ) j+ 1 2 ,k+ 1 2 +v − 2 (g (0) −g (2) ) j+ 1 2 ,k+ 3 2 +v + 2 (g (0) +g (2) ) j+ 1 2 ,k− 1 2 +v − 2 (g (0) −g (2) ) j+ 1 2 ,k+ 1 2 + h 2 j+ 1 2 3 v + 1 g (2) j+ 1 2 ,k+ 1 2 +v − 1 g (2) j+ 3 2 ,k+ 1 2 −v + 1 g (2) j− 1 2 ,k+ 1 2 −v − 1 g (2) j+ 1 2 ,k+ 1 2 =2h 1 j+ 1 2 v 2 g (0) j+ 1 2 ,k+ 1 2 . Finally, taking their moments in terms of  Ψ , we get a weak formulation at the macroscopic level as follows: (3.38) h 1 j+ 1 2 h 2 k+ 1 2 d d t U (0) j+ 1 2 ,k+ 1 2 +h 2 k+ 1 2 (F 1 +,(0) +F 1 +,(1) ) j+ 1 2 ,k+ 1 2 +(F 1 −,(0) −F 1 −,(1) ) j+ 3 2 ,k+ 1 2 −(F 1 +,(0) +F 1 +,(1) ) j− 1 2 ,k+ 1 2 −(F 1 −,(0) −F 1 −,(1) ) j+ 1 2 ,k+ 1 2 +h 1 j+ 1 2 (F 2 +,(0) +F 2 +,(2) ) j+ 1 2 ,k+ 1 2 +(F 2 −,(0) −F 2 −,(2) ) j+ 1 2 ,k+ 3 2 −(F 2 +,(0) +F 2 +,(2) ) j+ 1 2 ,k− 1 2 −(F 2 −,(0) −F 2 −,(2) ) j+ 1 2 ,k+ 1 2 =0, (3.39) h 1 j+ 1 2 h 2 k+ 1 2 3 d d t U (1) j+ 1 2 ,k+ 1 2 +h 2 k+ 1 2 (F 1 +,(0) +F 1 +,(1) ) j+ 1 2 ,k+ 1 2 +(F 1 −,(0) −F 1 −,(1) ) j+ 3 2 ,k+ 1 2 +(F 1 +,(0) +F 1 +,(1) ) j− 1 2 ,k+ 1 2 +(F 1 −,(0) −F 1 −,(1) ) j+ 1 2 ,k+ 1 2 + h 1 j+ 1 2 3 (F 2 +,(1) ) j+ 1 2 ,k+ 1 2 +(F 2 −,(1) ) j+ 1 2 ,k+ 3 2 −(F 2 +,(1) ) j+ 1 2 ,k− 1 2 −(F 2 −,(1) ) j+ 1 2 ,k+ 1 2 =2h 2 k+ 1 2 (F 1 (0) ) j+ 1 2 ,k+ 1 2 , (3.40) h 1 j+ 1 2 h 2 k+ 1 2 3 d d t U (2) j+ 1 2 ,k+ 1 2 +h 1 j+ 1 2 (F 2 +,(0) +F 2 +,(2) ) j+ 1 2 ,k+ 1 2 +(F 2 −,(0) −F 2 −,(2) ) j+ 1 2 ,k+ 3 2 +(F 2 +,(0) +F 2 +,(2) ) j+ 1 2 ,k− 1 2 +(F 2 −,(0) −F 2 −,(2) ) j+ 1 2 ,k+ 1 2 + h 2 j+ 1 2 3 (F 1 +,(2) ) j+ 1 2 ,k+ 1 2 +(F 1 −,(2) ) j+ 3 2 ,k+ 1 2 −(F 1 +,(2) ) j− 1 2 ,k+ 1 2 −(F 1 −,(2) ) j+ 1 2 ,k+ 1 2 =2h 1 j+ 1 2 (F 2 (0) ) j+ 1 2 ,k+ 1 2 , where (F i ±,(l) ) j+ 1 2 ,k+ 1 2 =∫ R K+2 v ± i Ψg (l) j+ 1 2 ,k+ 1 2 d v d ξ,(F i (l) ) j+ 1 2 ,k+ 1 2 =∫ R K+2 v i Ψg (l) j+ 1 2 ,k+ 1 2 d v d ξ, i=1,2. The fluxes  F i ±,( l )  and  F i 0,( l ) := F ( l ) i  can be represented as F ν,(l) 1 =ρ a (l) 1 [v 1 1 ] ν +a (l) 2 [v 1 2 ] ν +a (l) 3 [v 1 1 ] ν [v 1 2 ] 0 +a (l) 4 [v 1 3 ] ν a (l) 1 [v 1 2 ] ν +a (l) 2 [v 1 3 ] ν +a (l) 3 [v 1 2 ] ν [v 1 2 ] 0 +a (l) 4 [v 1 4 ] ν a (l) 1 [v 1 1 ] ν [v 1 2 ] 0 +a (l) 2 [v 1 2 ] ν [v 1 2 ] 0 +a (l) 3 [v 1 1 ] ν [v 2 2 ] 0 +a (l) 4 [v 1 3 ] ν [v 1 2 ] 0 a (l) 1 [v 1 3 ] ν +a (l) 2 [v 1 4 ] ν +a (l) 3 [v 1 3 ] ν [v 1 2 ] 0 +a (l) 4 [v 1 5 ] ν , and F ν,(l) 2 =ρ a (l) 1 [v 2 1 ] ν +a (l) 2 [v 2 1 ] ν [v 1 1 ] 0 +a (l) 3 [v 2 2 ] ν +a (l) 4 [v 2 3 ] ν a (l) 1 [v 2 1 ] ν [v 1 1 ] 0 +a (l) 2 [v 2 1 ] ν [v 2 1 ] 0 +a (l) 3 [v 2 2 ] ν [v 1 1 ] 0 +a (l) 4 [v 2 3 ] ν [v 1 1 ] 0 a (l) 1 [v 2 2 ] ν +a (l) 2 [v 2 2 ] ν [v 1 1 ] 0 +a (l) 3 [v 2 3 ] ν +a (l) 4 [v 2 4 ] ν a (l) 1 [v 2 3 ] ν +a (l) 2 [v 2 3 ] ν [v 1 1 ] 0 +a (l) 3 [v 2 4 ] ν +a (l) 4 [v 2 5 ] ν , where the subscript  ν =−, or +, or 0,  a (0) 1 ,a (0) 2 ,a (0) 3 ,a (0) 4 =(1,0,0,0)  and [v 1 3 ] ν := 1 2 [v 1 3 ] ν +[v 1 1 ] ν [v 2 2 ] 0 +[ξ 2 ] , [v 1 4 ] ν := 1 2 [v 1 4 ] ν +[v 1 2 ] ν [v 2 2 ] 0 +[ξ 2 ] , [v 1 5 ] ν := 1 4 [v 1 5 ] ν +2[v 1 3 ] ν [v 2 2 ] 0 +[ξ 2 ] +[v 1 1 ] ν [v 2 4 ] 0 +2[v 2 2 ] 0 [ξ 2 ]+[ξ 4 ] . The definition of  [v 2 k ] ν  can be given similarly, which will be omitted here. To discretize our systems of ordinary differential equations (ODE), e.g.  ,  ,  ,   or  ,  ,  , we use the higher-order Runge–Kutta time discretizations. As shown by Cockburn in  [7] , when polynomials of degree  q  are used, a Runge–Kutta method of order ( q +1) must be used in order to guarantee that the scheme is stable. In this paper, we will use a third-order TVD Runge–Kutta scheme of Shu and Osher  [21]  when solving a non-smooth problem and a fourth-order non-TVD Runge–Kutta scheme for solving smooth problems. More precisely, if we rewrite ODE system  ,  ,  ,   in a compact form:  U ′ ( t )= L ( U ), then the third-order TVD Runge–Kutta scheme is of the form (3.41) U (1) =U n + Δ tL(U n ), U (2) = 3 4 U n + 1 4 U (1) + 1 4 Δ tL(U (1) ), U n+1 = 1 3 U n + 2 3 U (2) + 2 3 Δ tL(U (2) ), while the fourth-order non-TVD Runge–Kutta scheme is of the form (3.42) U (1) =U n + 1 2 Δ tL(U n ), U (2) =U n + 1 2 Δ tL(U (1) ), U (3) =U n + Δ tL(U (2) ), U n+1 = 1 3 U (1) +2U (2) +U (3) −U n + 1 2 Δ tL(U (3) ) . It is known that if the solution discontinuities are strong then the RKDG methods will generate significant oscillations and even non-linear instability. To fix this, typically a local projection or non-linear limiter should be used after each Runge–Kutta inner stage or after some complete Runge–Kutta steps. A limiter in a higher-order numerical scheme should satisfy the following two requirements: • non-oscillatory, sharp resolution of discontinuities, and recover the full formal order of accuracy away from the discontinuities. Thus we can approximate the degrees of freedom for  U (l) j+ 1 2  by using the differences of the lower degrees of freedom as follows: U (1) j+ 1 2 − 3 2 U (3) j+ 1 2 = 1 2 h ∂ U h ∂ x x j+ 1 2 ,t ≈ 1 2 ψ Δ + U (0) j+ 1 2 ,Δ − U (0) j+ 1 2 , U (2) j+ 1 2 = h 6 ∂ ∂ x h 2 ∂ U h ∂ x x j+ 1 2 ,t ≈ 1 6 ψ Δ + U (1) j+ 1 2 − 3 2 U (3) j+ 1 2 ,Δ − U (1) j+ 1 2 − 3 2 U (3) j+ 1 2 , U (3) j+ 1 2 = h 10 ∂ ∂ x h 2 12 ∂ 2 U h ∂ x 2 x j+ 1 2 ,t ≈ 1 10 ψ Δ + U (2) j+ 1 2 ,Δ − U (2) j+ 1 2 , where  ψ ( a , b ) is a suitable weight function,  Δ +  and  Δ −  denote the forward and backward difference operators, respectively. Because  U (l) j+ 1 2 = O (h l ) ,  l =0,…, q , we can simplify the above approximation to the degrees of freedom  U (l) j+ 1 2 . Our limiting procedure is given as follows. Following Shu &# x27;s TVB idea  [20] , for  l =0,…, q , we define (4.2) U (l), new j+ 1 2 = U (l), old j+ 1 2 , if U (l), old j+ 1 2 ⩽M l h l+1 , ψ 1 U (l), old j+ 1 2 , U (l) j+ 1 2 otherwise , where  M l  is a problem-dependent constant, and (4.3) U (l) j+ 1 2 = 1 2(2l−1) ψ 2 Δ + U (l−1) j+ 1 2 ,Δ − U (l−1) j+ 1 2 . In  ,  , the weight or limiter functions  ψ 1 ( a , b ) and  ψ 2 ( a , b ) are chosen as ψ 1 (a,b)= 0, ab⩽0, sign (a) min {|a|,|b|}, ab > 0, ψ 2 (a,b)= 0, ab⩽0, sign (a) max { min {α|a|,|b|}, min {|a|,α|b|}}, ab > 0, where  α  is a given constant, taken generally as 1 or 2, for our computations. In this section, we will use our RKDG method to solve the Euler equations of gas dynamics. Throughout our computations, we take  γ =1.4 in  (1.3) . We first test the accuracy of the schemes for the one-dimensional system. The fourth-order Runge–Kutta method  (3.42)  will be employed. In this case,  M l =50∼160, and the time step size Δ t n  is determined by the following CFL restriction: (5.1) Δ t n ⩽ 1 2q+1 min j h j+ 1 2 max j u n j+ 1 2 +c n j+ 1 2 , where  c= γp/ρ  denotes the sound speed. Example 5.1 The first problem we consider is to solve initial value problem of the Euler equation  (2.2)  with the initial data ρ(x,0)=1+0.2 sin (π,x), u(x,0)=0.7, p(x,0)=1. The computational domain is taken as [0,2], and the periodic boundary condition is used. This problem has the exact solution in the following form: ρ(x,t)=1+0.2 sin (π(x−ut)), u(x,t)=0.7, p(x,t)=1. We compute the solution up to  t =2. The errors and numerical orders of accuracy for the density  ρ  obtained by using the present RKDG method without limiters are shown in  Table 1 ,  Table 2 ,  Table 3 ,  Table 4 ,  Table 5 . The errors of the solution are measured here by a very refined quadrature inside each cell. The results show that a ( q +1)th-order rate of convergence can be obtained for  q =1,2, even though the limiting procedure is used, see e.g.  Table 3 . The rate of convergence for  q =3 seems unsatisfactory, which will be further investigated. Our code can be downloaded from  ftp://162.105.69.120/TANGHZ/dg1d02.zip . Table 1 . The errors and convergence order for solutions at  t =2 calculated by using  P 0  based RKDG method Table 2 . Same as  Table 1  except for  q =1 Table 3 . Same as  Table 2  except with limiter Table 4 . Same as  Table 1  except for  q =2 Table 5 . Same as  Table 1  except for  q =3 Next, we check the ability of shock capturing for the proposed schemes. The third-order Runge–Kutta method  (3.41)  will be adopted. Example 5.2 This example is to solve Sod &# x27;s shock tube problem. The domain is taken as [0,1], which is divided into 100 cells. The initial data are (ρ,u,p)= (1,0,1), x < 0.4, (0.125,0,0.1), x⩾0.4. We output the solutions at  t =0.2, which consists of a left rarefaction wave, a contact discontinuity, and a right moving weak shock.  Fig. 1 ,  Fig. 2 ,  Fig. 3  show the density, the pressure, the velocity, and the internal energy, obtained by the RKDG method with or without using a limiting procedure. It is seen that the shock is resolved almost exactly by our RKDG method; and the resolution of the contact discontinuous is improved as  q  is increased, although numerical oscillation becomes serious in the same time. After a limiting procedure is used, the numerical oscillation can been essentially suppressed while the shock is still well-resolved, although the resolution of the contact waves is slightly decreased. Fig. 1 . Comparison of the computed solutions (“circle”) with the exact solutions. The solution at  t =0.2 is obtained by  P 1  based RKDG method with 100 grid cells. Top: the limiter is not used; bottom: a limiter is used. Fig. 2 . Same as  Fig. 1 , except for  q =2. Fig. 3 . Same as  Fig. 1 , except for  q =3. Example 5.3 This example is to solve the Lax shock tube problem within the domain [0,1] with the following initial data: (ρ,ρu,E)= (0.445,0.311,8.928), x < 0.5, (0.5,0,1.4275), x⩾0.5. The final solution output is at  t =0.14 with 100 cells. It consists of a left rarefaction wave, a contact discontinuity, and a right moving shock. Since the shock in this example is stronger than that in the Sod &# x27;s shock tube problem, the numerical oscillation becomes more serious without using a limiting procedure.  Fig. 4  shows the solutions of the density, pressure, velocity and internal energy, obtained by using the RKDG method with a limiting procedure. Fig. 4 . Comparison of the computed solutions (“circle”) with the exact solutions. The solution at  t =0.14 is obtained by  P q  based RKDG method with 100 grid cells: (top)  q =1; (middle)  q =2; and (bottom)  q =3. Example 5.4 The third example is to solve the problem of Shu and Osher  [22]  which describes the interaction of an entropy sine wave with a Mach 3 righting moving shock. The domain is taken as [−5,5] and the initial data are (ρ,u,p)= (3.857143,2.629369,10.33333), x < −4, (1+0.2 sin (5x),0,1), x⩾−4. As in  [22] , the final time is  t =1.8. Since the exact solution for this problem is unknown, we consider the numerical solution with 3000 cells as the exact solution. It is obtained by the MUSCL KFVS finite volume method with van Leer limiter.  Fig. 5  shows the density, the pressure, the velocity, and the internal energy, calculated by the  P q ,  q =1,2,3, based RKDG method with a limiting procedure and 400 cells. We can see that the high frequencies are well-represented and the compression waves and the shock are well-captured. Fig. 5 . Comparison of the computed solutions (“circle”) with the exact solutions. The solution at  t =1.8 is obtained by  P q  based RKDG method with 400 grid cells: (top)  q =1; (middle)  q =2; (bottom)  q =3. Finally, we implement the RKDG method for two-dimensional ramp problem. This problem has been solved by several authors, see, e.g.,  [10] ,  [29] . Example 5.5 The ramp problem is solved on the domain  x ∈[0,4]×[0,1] with  t  running from 0 to 0.2. The point  1 6 ,0  corresponds to the corner of the ramp and points ( x ,0) with  x > 1 6  lie on the sloping part of the ramp. Initially, a Mach 10 planar shock at an angle of 60° with the  x -axis is located at  h(x,t)= 3 (x− 1 6 )−20t . The left and right states are taken as U L =(8,57.1597,−33.0012,563.544) T ; U R =(1.4,0,0,2.5) T . The boundary conditions are U(0,y,t)=U L , U(4,y,t)=U R , U(x,1,t)= U L , x ⩽ x s , U R , x > x s . The reflecting boundary condition is specified for the points ( x ,0) with  x > 1 6 .  Fig. 6  shows density contours with 30 equally spaced contour lines that are obtained on uniform meshes with  h 1 =h 2 = 1 120  and  h 1 =h 2 = 1 240 , respectively. Fig. 6 . Density contours for the ramp problem: (top)  h 1 =h 2 = 1 120 ; (bottom)  h 1 =h 2 = 1 240 . The results reported in this section can be compared favorably with those obtained by using other high resolution schemes, see, e.g.,  [29] ,  [32] , and the adaptive grid methods, see, e.g.,  [2] ,  [18] ,  [23] . In this paper, we have presented a Runge–Kutta discontinuous Galerkin (RKDG) method for the Euler equations of gas dynamics from the viewpoint of gas-kinetic theory. Like the traditional gas-kinetic schemes, the proposed RKDG method is characteristic decomposition free and Riemann solver free since the integral term containing the non-linear flux can be computed exactly at the microscopic level. When the solutions to the Euler equations are either smooth or have weak discontinuities, they can be resolved by our RKDG methods very efficiently without using any limiting procedure. However, if the discontinuities are strong then the RKDG methods will generate significant oscillations and even non-linear instability. A limiting procedure is added in our RKDG methods to fix this problem. The accuracy and efficiency of the proposed methods are demonstrated by several numerical examples. We would like to thank Professor Chi-Wang Shu of Brown University and Dr. Tie Zhou of Peking University for numerous discussions during the preparation of this work, and the referees for many useful suggestions. This research was partially supported by the Special Funds for Major State Basic Research Projects of China, the National Natural Science Foundation of China, the Alexander von Humboldt foundation, and the project “Longtime behavior of non-linear hyperbolic systems of conservation laws and their numerical approximation”, contract #DFG WA 633/7-2. Elsevier We use cookies to help provide and enhance our service and tailor content and ads. By continuing you agree to the  use of cookies . Copyright © 2019 Elsevier B.V. or its licensors or contributors. ScienceDirect ® is a registered trademark of Elsevier B.V. 