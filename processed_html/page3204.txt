Introducing ibrik - code coverage tool for CoffeeScript by using istanbul - 枕を欹てて聴く Image: ©  lorises  2010 Istanbul  made by  Krishnan Anantheswaran  from the Yahoo! Cocktail team is great code coverage tool for  JavaScript . (see  usage  by Ariya Hidayat) Internally it uses  Esprima  to parse  JavaScript  code and  Escodegen  to generate instrumented  JavaScript  code. These modules use  Mozilla JavaScript AST  as Internal Representation. Therefore, if we prepare  Mozilla JavaScript  AST, istanbul can generate instrumented code and coverage result. I've created  ibrik , the code coverage tool for CoffeeScript by using istanbul and  CoffeeScriptRedux  compiler. We can install it by write  test.coffee and use it by We gets summary. And by using istanbul, we can see coverage result on browser. CoffeeScriptRedux  made by  Michael Ficarra  generates  Mozilla  JS AST and generate  JavaScript  code by using Escodegen as its backend. So ibrik generates  Mozilla  JS AST by using CoffeeScriptRedux compiler and passes it to istanbul instrumenter. istanbul instrumenter refers line  &  column information attached to AST, so by attaching line  &  column information to original (CoffeeScript) code, we can get instrumented  JavaScript  code and trace CoffeeScript execution. This is the same logic to how CoffeeScriptRedux compiler generates SourceMap. ibrik implementation is still at very experimental stage. Check the  ibrik project  on GitHub. Contributions are welcome. Constellation 5 years ago Constellation is using Hatena Blog. Would you like to try it too?       Powered by  Hatena Blog       |         ブログを報告する Quote saved. Login to quote this blog Failed to save quote. Please try again later. You cannot quote because this article is private. 