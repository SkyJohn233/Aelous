firebase-database security rules remember the database rules we changed we made it so anyone can read and write data without checking authentication let s change it back to the default rules which means that users need to be authenticated to read and write data these rules are enforced by the firebase servers so there is no way for our users to bypass the rules that we set these rules are a good starting point for a simple chat app like friendlychat but there are certainly plenty of cases where we will want to further restrict access let s examine how firebase database security rules make this possible firebase allows three main rule types .read .write and .validate each of these can be set to true or false and can apply to the whole database or a particular location in the database depending on how they are configured rule type description 1 read describes whether data can be read by the user 2 write describes whether data can be written by the user 3 validate defines what a correctly formatted value looks like whether it has child nodes and the data type firebase database security includes a set of predefined variables that enable you to customize data accessibility below is a list of predefined variables and a link to each api reference variable description 1 now the current time in milliseconds since unix epoch time january 1 1970 2 root corresponds to the current data at the root of the database you can use this to read any data in your database in your rule expressions 3 newdata corresponds to the data that will result if the write is allowed 4 data corresponds to the current data in firebase realtime database at the location of the currently executing rule 5 variables a wildcard path used to represent ids and dynamic child keys 6 auth contains the token payload if a user is authenticated or null if the user is n't authenticated we will expand on the auth variable because we will use it in database security examples the auth variable contains the json web token for the user a json web token is a standard that defines a way of securely transmitting information between parties like the database and a client as a json object once a user is authenticated this token contains the provider the uid and the firebase auth id token the provider is the method of authentication such as email/password google sign in or facebook login the uid is a unique user id this id is guaranteed to be unique across all providers so a user that authenticates with google and a user that authenticates with email/password do not risk having the same identification the firebase auth id is a web token yes this means that there is a web token inside of the auth web token this token can contain the following data data description 1 email the email address associated with the account 2 email_verified a boolean that is true if the user has verified they have access to the email address some providers automatically verify email addresses you can customize authentication to include email verification for email/password on ios 3 name the user s display name if one is set 4 sub the user s firebase uid 5 firebase.identities dictionary of all the identities that are associated with this user 's account 6 firebase.sign_in_provider the sign-in provider used to obtain this firebase auth id token firebase-database security rules march 31 2019 october 4 2017 september 21 2017